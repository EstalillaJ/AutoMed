@using AutoMed.Models;
@using AutoMed.Models.DataModels
@model AutoMed.Models.DataModels.Quote

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Quotes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Quote</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="col-md-6">

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.DiscountPercentage, htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DiscountPercentage, new {htmlAttributes = new {@class = "form-control maxwidth", @readonly = "true"}})
                    @Html.ValidationMessageFor(model => model.DiscountPercentage, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.DiscountDollars, htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DiscountDollars, new {htmlAttributes = new {@class = "form-control maxwidth", @readonly = "true"}})
                    @Html.ValidationMessageFor(model => model.DiscountDollars, "", new {@class = "text-danger"})
                </div>
            </div>
            
            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control maxwidth",@readonly="true" } })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.DateReviewed, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DateReviewed, new { htmlAttributes = new { @class = "form-control maxwidth", @readonly="true" } })
                </div>
            </div>
            
            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.ReviewedBy, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ReviewedBy.UserName, new { htmlAttributes = new { @class = "form-control maxwidth", @readonly = "true" } })
                </div>
            </div>
            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CreatedBy.UserName, new { htmlAttributes = new { @class = "form-control maxwidth", @readonly = "true" } })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Income, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Income, new { htmlAttributes = new { @class = "form-control maxwidth" } })
                    @Html.ValidationMessageFor(model => model.Income, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Expenses, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Expenses, new { htmlAttributes = new { @class = "form-control maxwidth" } })
                    @Html.ValidationMessageFor(model => model.Expenses, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.CurrentNumberInHousehold, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CurrentNumberInHousehold, new { htmlAttributes = new { @class = "form-control maxwidth" } })
                    @Html.ValidationMessageFor(model => model.CurrentNumberInHousehold, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.EligibleCost, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.EligibleCost, new { htmlAttributes = new { @class = "form-control maxwidth" } })
                    @Html.ValidationMessageFor(model => model.EligibleCost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.MandatoryCost, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MandatoryCost, new { htmlAttributes = new { @class = "form-control maxwidth" } })
                    @Html.ValidationMessageFor(model => model.MandatoryCost, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Vehicle, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.VehicleId, (IEnumerable<SelectListItem>)ViewBag.VehicleSelect, new { @class = "form-control maxwidth" })
                    @Html.ValidationMessageFor(model => model.Vehicle.Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.WorkDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.WorkDescription, new { @class = "form-control maxwidth", rows = "10" })
                    @Html.ValidationMessageFor(model => model.WorkDescription, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(m => m.CustomerId)

            <label class="btn btn-default btn-file">
                Upload Picture <input type="file" id="files" name="files" multiple/>
            </label>
            <div id="list" class="col-md-12"></div>
            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary col-md-3"/>
                </div>
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>



        <div class="form-group col-md-6">
            <label class="control-label col-md-2">Images</label>
            <br/>
            <div class="col-md-10">
                @foreach (Document document in Model.Documents)
                {
                    <img onclick="LoadModal(this.src)" width="200" height="200" src="/Document/Image/@document.Id" />
                }
            </div>
        </div>
        @Html.HiddenFor(m => m.Id)

        
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" id="modal">
        <!-- modal xl is defined in Content/Site.css not bootstrap -->
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <img id="modal-img" width="100%" height="100%" src="#" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

}

<div>

@section Scripts {
    @Scripts.Render("~/Scripts/UploadImages.js")
}