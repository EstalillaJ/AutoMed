@using AutoMed.Models;
@model CreateReportViewModel
@{
    ViewBag.Title = "Reports";
}
<div class="container">
    <div class="row">
        <div class="col-lg-12 text-center">
            <h2>Generate A Report</h2>
        </div>
    </div>


    @using (Html.BeginForm("Create", "Report", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-6 text-center">
                <h3>Discount Range</h3>
                @Html.LabelFor(m => m.AnyDiscountAmount) @Html.CheckBoxFor(m => m.AnyDiscountAmount, new { @id = "AnyDiscount" })
            </div>
            <div class="col-sm-6 text-center">
                <h3>Date Range</h3>
                @Html.LabelFor(m => m.AnyDate) @Html.CheckBoxFor(m => m.AnyDate, new { @id = "AnyDate" })
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6 text-center">
                <h4>Dollar Amount</h4>
            </div>
            <div class="col-sm-6 text-center">
                <h4>Start Date</h4>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3 text-center">
                @Html.EditorFor(m => m.MinDiscountDollars, "WatermarkNumber")
            </div>
            <div class="col-sm-3 text-center">
                @Html.EditorFor(m => m.MaxDiscountDollars, "WatermarkNumber")
            </div>
            <div class="col-sm-2 text-center">
                @Html.DropDownListFor(m => m.StartMonth, new SelectList(Enumerable.Range(1, 12)), "Month", new { @class="form-control" })
            </div>
            <div class="col-sm-2 text-center">
                @Html.DropDownListFor(m => m.StartDay, new SelectList(Enumerable.Range(1, 31)), "Day", new { @class = "form-control" })
                </div>
            <div class="col-sm-2 text-center">
                @Html.DropDownListFor(m => m.StartYear, new SelectList(Enumerable.Range(2016, DateTime.Today.Year - 2016 + 1)), "Year", new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6 text-center">
                <h4>Percentage</h4>
            </div>
            <div class="col-sm-6 text-center">
                <h4>End Date</h4>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-3 text-center">
                @Html.EditorFor(m => m.MinDiscountDollars, "WatermarkNumber")
            </div>
            <div class="col-sm-3 text-center">
                @Html.EditorFor(m => m.MaxDiscountDollars, "WatermarkNumber")
            </div>
            <div class="col-sm-2 text-center">
                @Html.DropDownListFor(m => m.EndMonth, new SelectList(Enumerable.Range(1, 12)), "Month", new { @class = "form-control" })
            </div>
            <div class="col-sm-2 text-center">
                @Html.DropDownListFor(m => m.EndDay, new SelectList(Enumerable.Range(1, 31)), "Day", new { @class = "form-control" })
            </div>
            <div class="col-sm-2 text-center">
                @Html.DropDownListFor(m => m.EndYear, new SelectList(Enumerable.Range(2016, DateTime.Today.Year - 2016 + 1)), "Year", new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-12 text-center">
                <h3>Locations</h3>
                @Html.LabelFor(m => m.AllLocations) @Html.CheckBoxFor(m => m.AllLocations, new { @id = "AnyLocation" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Include</th>
                        </tr>
                    </thead>
                @for (int i = 0; i < Model.Locations.Count(); i++)
                {
                    <tr>
                        <td>
                            @Model.Locations[i].Item.Id
                        </td>
                        <td>
                            @Model.Locations[i].Item.Name
                        </td>
                        <td>
                            @Html.CheckBoxFor(m => m.Locations[i].IsChecked, new { id = "location_checkbox_" + i , @class="location_checkbox"})
                        </td>
                    </tr>
                }
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Generate" />
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var numLocations = @Model.Locations.Count();        
        function isLeapYear(year){
            return year % 4 == 0 ? year %  100 != 0 : year % 400 == 0;
        }
        // takes a month & year (as numbers), and a reference to the select list for the days
        function changeDaysAvailable(selectedMonth, selectedYear, daySelectList) {
            var thirtyDays = [4, 6, 9, 11]
            if ($.inArray(selectedMonth, thirtyDays) > -1) {
                var end = 30;
            }
            else if (selectedMonth == 2) {
                var end = isLeapYear(selectedYear) ? 29 : 28;
            }
            else {
                var end = 31;
            }
            if (daySelectList.length != end) {
                daySelectList.empty();
                // Keep this select list labeled like the others
                daySelectList.append(new Option("Day", 0))
                for (var i = 1; i <= end; i++) {
                    daySelectList.append(new Option(i, i));
                }
            }
        }

        $("#AnyLocation").change(
            function () {
                var checked = $(this).is(":checked");
                for (var i = 0; i < numLocations; i++){
                    $("#location_checkbox_"+i).prop('checked', checked);
                }
        });

        $(".location_checkbox").change(
            function(){
                var checked = $(this).is(":checked");
                if (!checked){
                    $("#AnyLocation").prop('checked', false);
                }
                else{
                    var allchecked = true;
                    for (var i = 0; i < numLocations; i++){
                        if (!$("#location_checkbox_"+i).is(":checked")){
                            allchecked = false;
                        }
                    }
                    $("#AnyLocation").prop('checked', allchecked);
                }
            });

        $("#AnyDiscount").change(
            function () {
                var checked = $(this).is(":checked")
                $("#MaxDiscountDollars").prop('disabled', checked);
                $("#MinDiscountDollars").prop('disabled', checked);
        });
        $("#AnyDate").change(
            function () {
                var checked = $(this).is(":checked")
                $("#StartDay").prop('disabled', checked);
                $("#EndDay").prop('disabled', checked);
                $("#StartMonth").prop('disabled', checked);
                $("#EndMonth").prop('disabled', checked);
                $("#StartYear").prop('disabled', checked);
                $("#EndYear").prop('disabled', checked);
        });

        // change days you can select based on the month and year
        $("#StartMonth").change(function() {
            changeDaysAvailable(this.value, $("#StartYear").value, $("#StartDay"))
        });

        $("#EndMonth").change(function(){
            changeDaysAvailable(this.value, $("#EndYear").value, $("#EndDay"))
        });

            
    </script>
}




