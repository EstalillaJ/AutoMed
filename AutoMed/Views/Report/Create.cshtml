@using AutoMed.Models;
@model CreateReportViewModel
@{
    ViewBag.Title = "Reports";
}
    <div class="row">
        <div class="col-md-12 text-center">
            <h2>Generate A Report</h2>
        </div>
    </div>

    @using (Html.BeginForm("Details", "Report", FormMethod.Post, new { @class = "form-horizontal", role = "form" , id = "form-create" }))
    {
        @Html.AntiForgeryToken()

        <h3 class="text-center">Quote Info</h3>

        <div class="row">
            <div class="col-sm-6 col-xs-12 text-center">
                <h4>Start Date</h4>
            </div>
            <div class="col-sm-6 col-xs-12 text-center">
                <h4>End Date</h4>
             </div>
        </div>

        <div class="row">
            <div class="col-sm-2 col-xs-4 text-center">
                @Html.EnumDropDownListFor(m => m.StartMonth, "Month", new { @class="form-control" })
            </div>
            <div class="col-sm-2 col-xs-4 text-center">
                @Html.DropDownListFor(m => m.StartDay, new SelectList(Enumerable.Range(1, 31)), "Day", new { @class = "form-control" })
                </div>
            <div class="col-sm-2 col-xs-4 text-center">
                @Html.DropDownListFor(m => m.StartYear, new SelectList(Enumerable.Range(2016, DateTime.Today.Year - 2016 + 1)), "Year", new { @class = "form-control" })
            </div>
            <div class="col-sm-2 col-xs-4 text-center">
                @Html.EnumDropDownListFor(m => m.EndMonth, "Month", new { @class = "form-control" })
            </div>
            <div class="col-sm-2 col-xs-4 text-center">
                @Html.DropDownListFor(m => m.EndDay, new SelectList(Enumerable.Range(1, 31)), "Day", new { @class = "form-control" })
            </div>
            <div class="col-sm-2 col-xs-4 text-center">
                @Html.DropDownListFor(m => m.EndYear, new SelectList(Enumerable.Range(2016, DateTime.Today.Year - 2016 + 1)), "Year", new { @class = "form-control" })
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6 col-xs-12 text-center">
                <h4>Dollar Amount</h4>
            </div>
            <div class="col-sm-6 col-xs-12 text-center">
                <h4>Percentage</h4>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-3 col-xs-12 text-center">
                @Html.EditorFor(m => m.MinDiscountDollars, "WatermarkNumber")
            </div>
            <div class="col-sm-3 col-xs-12 text-center">
                @Html.EditorFor(m => m.MaxDiscountDollars, "WatermarkNumber")
            </div>
            <div class="col-sm-3 col-xs-12 text-center">
                @Html.EditorFor(m => m.MinDiscountPercentage, "WatermarkNumber")
            </div>
            <div class="col-sm-3 col-xs-12 text-center">
                @Html.EditorFor(m => m.MaxDiscountPercentage, "WatermarkNumber")
            </div>

        </div>

       <h3 class="text-center">Customer Info</h3>

        <div class="row">
                <div class="col-sm-3 text-center">
                    @Html.EditorFor(m => m.Address, "WatermarkString")
                </div>
                <div class="col-sm-3 text-center">
                    @Html.EditorFor(m => m.City, "WatermarkString")
                </div>
                <div class="col-sm-2 text-center">
                    @Html.EnumDropDownListFor(m => m.State, "State", new { @class = "form-control" })
                </div>
                <div class="col-sm-2 text-center">
                    @Html.EditorFor(m => m.ZipCode, "WatermarkNumber")
                </div>
                <div class="col-sm-2 text-center">
                    @Html.EditorFor(m => m.NumberInHousehold, "WatermarkNumber")
                </div>
        </div>

        <div class="row">
            <div class="col-md-12 text-center">
                <h3>Locations</h3>
                <p class="hidden text-danger" id="location-checkbox-error">Please choose at least one location</p>
                @Html.CheckBoxFor(m => m.AllLocations) @Html.LabelFor(m => m.AllLocations)
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Include</th>
                        </tr>
                    </thead>
                @for (int i = 0; i < Model.Locations.Count(); i++)
                {
                    <tr>
                        <td>
                            @Model.Locations[i].Item.Id
                        </td>
                        <td>
                            @Model.Locations[i].Item.Name
                        </td>
                        <td>
                            @Html.CheckBoxFor(m => m.Locations[i].IsChecked, new { @class = "location_checkbox" })
                            @Html.HiddenFor(m => m.Locations[i].Item.Id)
                        </td>
                    </tr>
                }
                </table>
            </div>
        </div>
        <hr />
        <div class="col-md-12 text-center">
            <h3>Data To Include</h3>
            <p class="hidden text-danger"  id="data-field-error">Please choose at least one data field</p>
            @Html.CheckBoxFor(m => m.AllColumns) @Html.LabelFor(m => m.AllColumns)
        </div>
            <div class="row form-group">
                @for (int i = 0; i < Model.ColumnsToInclude.Count; i++)
                {
                    <div class="col-md-3 col-sm-4 col-xs-6">
                        <label class="checkbox-inline">
                            @Html.CheckBoxFor(m => m.ColumnsToInclude[i].IsChecked, new { @class = "column_checkbox" })
                            @Model.ColumnsToInclude[i].Item 
                            @Html.HiddenFor(m => m.ColumnsToInclude[i].Item)
                        </label>
                    </div>
                }
            </div>
        <div class="form-group">
            <div class="col-md-offset-10 col-md-2">
                <input type="submit" class="btn btn-default" value="Generate" />
            </div>
        </div>


    }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/DateSelect.js")
    <script>
        var numLocations = @Model.Locations.Count();        

        function toggleCheckboxes(idOfMaster, classOfSlaves, cb){
            $(idOfMaster).change(
                function () {
                    var checked = $(this).is(":checked");
                    $(classOfSlaves).prop('checked', checked);
                });

        $(classOfSlaves).change(
                function(){
                    var checked = $(this).is(":checked");
                    if (!checked){
                        $(idOfMaster).prop('checked', false);
                    }
                    else{
                        var allchecked = $(classOfSlaves).not(":checked").length === 0;
                        $(idOfMaster).prop('checked', allchecked);
                    }
                    cb();
                });
        }

        $("#form-create").submit(function (event) {
            if (!$(".location_checkbox").is(":checked")) {
                $("#location-checkbox-error").removeClass('hidden');
                event.preventDefault();
            }

            if (!$(".column_checkbox").is(":checked")) {
                $('#data-field-error').removeClass('hidden');
                event.preventDefault();
            }
        });

        toggleCheckboxes("#AllLocations", ".location_checkbox", function() {
            $("#location-checkbox-error").addClass("hidden");
        });
        toggleCheckboxes("#AllColumns", ".column_checkbox", function() {
            $("#data-field-error").addClass("hidden");   
        });

  
        $("#AnyDiscountDollars").change(
            function () {
                var checked = $(this).is(":checked");
                $("#MaxDiscountDollars").prop('disabled', checked);
                $("#MinDiscountDollars").prop('disabled', checked);
            });
        
        $("#AnyDiscountPercentage").change(
            function () {
                var checked = $(this).is(":checked");
                $("#MaxDiscountPercentage").prop('disabled', checked);
                $("#MinDiscountPercentage").prop('disabled', checked);
            });
        $("#AnyDate").change(
            function () {
                var checked = $(this).is(":checked");
                $("#StartDay").prop('disabled', checked);
                $("#EndDay").prop('disabled', checked);
                $("#StartMonth").prop('disabled', checked);
                $("#EndMonth").prop('disabled', checked);
                $("#StartYear").prop('disabled', checked);
                $("#EndYear").prop('disabled', checked);
            });
        
        $("#EndMonth").change(function(){
            changeDaysAvailable(this.value, $("#EndYear").value, $("#EndDay"))
        })
        $("#StartMonth").change(function(){
            changeDaysAvailable(this.value, $("#StartYear").value, $("#StartDay"))
        })
    </script>
}
